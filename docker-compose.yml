services:

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api-biblioteca
      - grafana
      - prometheus
    networks:
      - monitoring

  postgres:
    image: postgres:15-alpine
    container_name: postgres-biblioteca
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=biblioteca_minicurso
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=root
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - monitoring
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    ports:
      - "5050:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=admin
      - SCRIPT_NAME=/pgadmin
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    networks:
      - monitoring
    depends_on:
      - postgres
    restart: unless-stopped

  api-biblioteca:
    container_name: api-biblioteca
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    networks:
      - monitoring
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=biblioteca_minicurso
      - DB_USER=postgres
      - DB_PASSWORD=root
      - MANAGEMENT_ENDPOINTS_GRAFANA=health,info,prometheus,metrics

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.external-url=http://3.93.43.187/prometheus/'
      - '--web.route-prefix=/prometheus/'
    networks:
      - monitoring
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SERVER_ROOT_URL=http://3.93.43.187/grafana/
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
    depends_on:
      - prometheus
    networks:
      - monitoring
    volumes:
      - grafana-storage:/var/lib/grafana
    restart: unless-stopped

networks:
  monitoring:
    driver: bridge

volumes:
  grafana-storage:
  postgres-data:
  pgadmin-data:
